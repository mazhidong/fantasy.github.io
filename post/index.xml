<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Fantasy Blogs</title>
    <link>https://mazhidong.github.io/post/</link>
    <description>Recent content in Posts on Fantasy Blogs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 22 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mazhidong.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用Docker编译Android系统源码</title>
      <link>https://mazhidong.github.io/post/docker/2018-06-22-%E4%BD%BF%E7%94%A8docker%E7%BC%96%E8%AF%91android%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/</link>
      <pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/docker/2018-06-22-%E4%BD%BF%E7%94%A8docker%E7%BC%96%E8%AF%91android%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/</guid>
      <description>引言： 最近公司业务转型，开始倒腾起安卓系统，做了几个月的安卓APP开发，最近又需要做系统定制，所以撸起袖子搞起… 首先干嘛？部署开发环境，开发</description>
    </item>
    
    <item>
      <title>Ffmpeg选项详解</title>
      <link>https://mazhidong.github.io/post/linux/2018-06-19-ffmpeg%E9%80%89%E9%A1%B9%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/linux/2018-06-19-ffmpeg%E9%80%89%E9%A1%B9%E8%AF%A6%E8%A7%A3/</guid>
      <description>Ffmpeg快速命令使用 Ffmpeg使用语法 1 ffmpeg [[options][`-i&amp;#39; input_file]]... {[options] output_file}... 如果没有输入文件，那么视音频捕捉（只在Linux下有效，因为Linux下把音视频设备</description>
    </item>
    
    <item>
      <title>bootanimation支持播放MP4</title>
      <link>https://mazhidong.github.io/post/aosp/2018-06-19-bootanimation%E6%94%AF%E6%8C%81%E6%92%AD%E6%94%BEmp4/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/aosp/2018-06-19-bootanimation%E6%94%AF%E6%8C%81%E6%92%AD%E6%94%BEmp4/</guid>
      <description>系统环境 Android API 15 视频生成 1 ffmpeg -f image2 -r 15 -i %*.png -vcodec mpeg4 bootanimation.mp4 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46</description>
    </item>
    
    <item>
      <title>ffmpeg使用参数的中文说明</title>
      <link>https://mazhidong.github.io/post/linux/2018-06-19-ffmpeg%E4%BD%BF%E7%94%A8%E5%8F%82%E6%95%B0%E7%9A%84%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/linux/2018-06-19-ffmpeg%E4%BD%BF%E7%94%A8%E5%8F%82%E6%95%B0%E7%9A%84%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E/</guid>
      <description>视频数据流量，用-b xxxx的指令则使用固定码率，数字随便改，1500以上没效果；还可以用动态码率如：-qscale 4和-qscale 6，4</description>
    </item>
    
    <item>
      <title>adb shell 调试 Android 串口</title>
      <link>https://mazhidong.github.io/post/aosp/2018-06-15-adb_shell%E8%B0%83%E8%AF%95android%E4%B8%B2%E5%8F%A3/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/aosp/2018-06-15-adb_shell%E8%B0%83%E8%AF%95android%E4%B8%B2%E5%8F%A3/</guid>
      <description>adb shell 调试 Android 串口 Android手机上很多外设是串口连接到AP的，如modem，gps。为了调试这些串口，通常需要将它们飞线接出来，用pc的串口</description>
    </item>
    
    <item>
      <title>android adb网络连接方法</title>
      <link>https://mazhidong.github.io/post/android/2018-06-13-android-android_adb%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/android/2018-06-13-android-android_adb%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E6%96%B9%E6%B3%95/</guid>
      <description>一、概述 在android里，adb一般使用USB连接，但是很多时候，可能只有一个设备终端，但是需要多于一个用户连接设备调试，因此使用网络连接</description>
    </item>
    
    <item>
      <title>超级详细的android目录说明</title>
      <link>https://mazhidong.github.io/post/aosp/2018-06-13-%E8%B6%85%E7%BA%A7%E8%AF%A6%E7%BB%86%E7%9A%84android%E7%9B%AE%E5%BD%95%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/aosp/2018-06-13-%E8%B6%85%E7%BA%A7%E8%AF%A6%E7%BB%86%E7%9A%84android%E7%9B%AE%E5%BD%95%E8%AF%B4%E6%98%8E/</guid>
      <description>Android 2.1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 |-- Makefile |-- bionic （bionic C库） |-- bootable （启动引导相关代码） |-- build （存放系统编译规则及generic等基础开发包配</description>
    </item>
    
    <item>
      <title>Android AbstractProcessor和apt环境配置</title>
      <link>https://mazhidong.github.io/post/android/2018-05-02-android--abstractprocessor%E5%92%8Capt%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/android/2018-05-02-android--abstractprocessor%E5%92%8Capt%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      <description>一、AbstractProcessor AbstractProcessor是抽象处理器，开发apt时都必须实现这个类来生成java文件，实现这</description>
    </item>
    
    <item>
      <title>Android 如何编写基于编译时注解的项目</title>
      <link>https://mazhidong.github.io/post/android/2018-05-02-android-android-%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E5%9F%BA%E4%BA%8E%E7%BC%96%E8%AF%91%E6%97%B6%E6%B3%A8%E8%A7%A3%E7%9A%84%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/android/2018-05-02-android-android-%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E5%9F%BA%E4%BA%8E%E7%BC%96%E8%AF%91%E6%97%B6%E6%B3%A8%E8%A7%A3%E7%9A%84%E9%A1%B9%E7%9B%AE/</guid>
      <description>一、概述 在Android应用开发中，我们常常为了提升开发效率会选择使用一些基于注解的框架，但是由于反射造成一定运行效率的损耗，所以我们会更青</description>
    </item>
    
    <item>
      <title>Android USB 冲突问题</title>
      <link>https://mazhidong.github.io/post/aosp/2018-04-26-android-usb-bug/</link>
      <pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/aosp/2018-04-26-android-usb-bug/</guid>
      <description>出现平台 RK3288 系统版本 Android 5.1 问题描述 两个USB不能同时工作.一个USB设备在工作的时候,再载入另外一个USB设备,前一个USB设备不能正常工作. 解</description>
    </item>
    
    <item>
      <title>ESH45 Android：无法访问 sdcard 目录</title>
      <link>https://mazhidong.github.io/post/aosp/2018-04-26-android-4.4-esh45-bug/</link>
      <pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/aosp/2018-04-26-android-4.4-esh45-bug/</guid>
      <description>现象: 内部存储没有见到sdcard目录,shell进入sdcard目录发现没有文件,正常情况下应该存在 Download,Music,Movi</description>
    </item>
    
    <item>
      <title>如何在github.io搭建Hugo博客站</title>
      <link>https://mazhidong.github.io/post/blog/deploy-hugo-blog-in-github.io/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/blog/deploy-hugo-blog-in-github.io/</guid>
      <description>摘要 在前面的博文中介绍了如何在github.io上搭建自己的博客站，基于的是Jekyll，这也是github中比较常用的方式，好处是gith</description>
    </item>
    
    <item>
      <title>Linux系统介绍（五）常用命令</title>
      <link>https://mazhidong.github.io/post/linux/2017-11-17-linux-study-common-tools/</link>
      <pubDate>Fri, 17 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/linux/2017-11-17-linux-study-common-tools/</guid>
      <description>cat命令 很多时候我们通过cat命令来查看文件内容，它会将文件的所有内容显示出来。当然，cat也可以通过管道接收数据，它主要完成的是将从管道</description>
    </item>
    
    <item>
      <title>Linux系统介绍（四）IO重定向与管道</title>
      <link>https://mazhidong.github.io/post/linux/2017-11-16-linux-study-io-pipe/</link>
      <pubDate>Thu, 16 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/linux/2017-11-16-linux-study-io-pipe/</guid>
      <description>IO重定向(IO redirection) Linux的有一个强大之处就是可以通过管道(Pipe)跟IO重定向将一系列命令的输出跟输入连接起来。IO重定向是Linux</description>
    </item>
    
    <item>
      <title>Linux系统介绍（三）shell基础</title>
      <link>https://mazhidong.github.io/post/linux/2017-10-10-linux-study-shell-basic/</link>
      <pubDate>Tue, 10 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/linux/2017-10-10-linux-study-shell-basic/</guid>
      <description>概述 首先，咱们来了解一下，什么是Shell。操作系统内核给我们提供了各种接口，同时也提供了各种用户层的库，理论上我们基于这些可以编写程序实现</description>
    </item>
    
    <item>
      <title>Linux系统介绍（一）命令行</title>
      <link>https://mazhidong.github.io/post/linux/2017-10-09-linux-study-command-line/</link>
      <pubDate>Mon, 09 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/linux/2017-10-09-linux-study-command-line/</guid>
      <description>概述 随着Linux的发展，现在已经有了非常多的桌面版本，比如著名的Ubuntu。用这些桌面版本系统，可以满足基本的操作，然而对于一些高级点的</description>
    </item>
    
    <item>
      <title>Linux系统介绍（二）文件系统结构</title>
      <link>https://mazhidong.github.io/post/linux/2017-10-09-linux-study-file-system-hierarchy/</link>
      <pubDate>Mon, 09 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/linux/2017-10-09-linux-study-file-system-hierarchy/</guid>
      <description>概述 多数Linux发行版本都是遵循文件系统结构标准（Filesystem Hierarchy Standard, 简称FHS），可以在这里找到该标准。本文对Linux的文件系统结</description>
    </item>
    
    <item>
      <title>Linux系统介绍--综述</title>
      <link>https://mazhidong.github.io/post/linux/2017-10-09-linux-study-overview/</link>
      <pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/linux/2017-10-09-linux-study-overview/</guid>
      <description>概述 从大二（2006年）开始接触Linux到现在已经有10几年了，遥记得那时候Ubuntu还是个位数时代，现在都到17了，真的是光阴如梭啊。</description>
    </item>
    
    <item>
      <title>如何搭建本地的Git服务器</title>
      <link>https://mazhidong.github.io/post/git/2017-09-04-how-to-setup-git-server/</link>
      <pubDate>Mon, 04 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/git/2017-09-04-how-to-setup-git-server/</guid>
      <description>概述 本文将介绍如何在本地搭建Git服务器。我们知道Git其实是个分布式的版本管理系统，与中心化的版本管理系统如SVN有根本的不同，每个使用者</description>
    </item>
    
    <item>
      <title>Linux学习从入门到精通推荐书籍</title>
      <link>https://mazhidong.github.io/post/linux/2017-08-18-linux-learning-materials/</link>
      <pubDate>Fri, 18 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/linux/2017-08-18-linux-learning-materials/</guid>
      <description>如何学习Linux 在现在的生活，生产，研究等领域，Linux已经无所不在，从我们使用的手机，车载设备，到服务器，桌面电脑等，Linux已经成</description>
    </item>
    
  </channel>
</rss>