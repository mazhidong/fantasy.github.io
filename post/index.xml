<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Fantasy Blogs</title>
    <link>https://mazhidong.github.io/post/</link>
    <description>Recent content in Posts on Fantasy Blogs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 30 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mazhidong.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ailed resolution of: Lorg/apache/http/message/BasicNameValuePair</title>
      <link>https://mazhidong.github.io/post/android/2019-12-30-failed-resolution-of-basicnamevaluepair/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/android/2019-12-30-failed-resolution-of-basicnamevaluepair/</guid>
      <description>前言 android9.0坑:Failed resolution of: Lorg/apache/http/message/BasicNameValuePair 问题 1 2 3 4 5 6 7 8 9 java.lang.NoClassDefFoundError: Failed resolution of: Lorg/apache/http/message/BasicNameValuePair; at id.mania.pinja.obtaindata.ObtainUploadPackageDataTask.onSetup(ObtainUploadPackageDataTask.java:53) at id.mania.pinja.network.engine.OkHttpEngine.setupHttpTask(OkHttpEngine.java:182) at id.mania.pinja.network.engine.OkHttpEngine.executeHttpTask(OkHttpEngine.java:352) at id.mania.pinja.network.engine.OkHttpEngine.access$000(OkHttpEngine.java:35) at id.mania.pinja.network.engine.OkHttpEngine$TaskRunnable.run(OkHttpEngine.java:653) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) at java.lang.Thread.run(Thread.java:764) 出现此问题主要是 apache 的 http 库在an</description>
    </item>
    
    <item>
      <title>2019-10-10_snap_Install</title>
      <link>https://mazhidong.github.io/post/linux/2019-10-10_snap_install/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/linux/2019-10-10_snap_install/</guid>
      <description>前往 https://uappexplorer.com/snaps 搜索需要的 snap 包， 例如 RedisDesktopManager 下载对应架构的 snap 包 下载完成后，在同一目录执行以下命令即可 1 $ sudo snap install xxx.snap --dangerous 追加一种来自 junkoBlog 的方法 由于直接设置 http_proxy 环境变量</description>
    </item>
    
    <item>
      <title>qt5 cannot find -lGL</title>
      <link>https://mazhidong.github.io/post/qt/2019-09-30_qt5-cannot-find-lgl/</link>
      <pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/qt/2019-09-30_qt5-cannot-find-lgl/</guid>
      <description>QT5在unbuntu中编译提示错误：qt5 cannot find -lGL 有两种原因，一种是没有安装libGL库，那么就安装： 1.没有安装libGL库 1 sudo apt-get install libgl1-mesa-dev 2.</description>
    </item>
    
    <item>
      <title>Linux 访问windows共享文件的几种方式</title>
      <link>https://mazhidong.github.io/post/linux/2019-09-04_-linux-%E8%AE%BF%E9%97%AEwindows%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/linux/2019-09-04_-linux-%E8%AE%BF%E9%97%AEwindows%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid>
      <description>samba方式 1 2 3 4 yum install samba-client.x86_64 #安装samba客户端 smbclient //192.168.211.1/test_samba #通过samba打开windows共享目录 smbclient //192.168.1.1/smb_share/ -U smb_user #系统提示输入smb_user_pa</description>
    </item>
    
    <item>
      <title>linux top命令VIRT,RES,SHR,DATA的含义</title>
      <link>https://mazhidong.github.io/post/linux/2019-03-08_-linux-top%E5%91%BD%E4%BB%A4virtresshrdata%E7%9A%84%E5%90%AB%E4%B9%89/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/linux/2019-03-08_-linux-top%E5%91%BD%E4%BB%A4virtresshrdata%E7%9A%84%E5%90%AB%E4%B9%89/</guid>
      <description>VIRT：virtual memory usage 虚拟内存 进程“需要的”虚拟内存大小，包括进程使用的库、代码、数据等 假如进程申请100m的内存，但实际只使用了10</description>
    </item>
    
    <item>
      <title>SerialPort注意事项</title>
      <link>https://mazhidong.github.io/post/serialport/2019-02-25_serialport%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/serialport/2019-02-25_serialport%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid>
      <description>现象: 发送16进制数据的时候多出 od 或者 oa 字符 解决方案: 回车 代码：CR ASCII码：\ r ，十六进制，0x0d 回车的作用只是移动光标至该行的起始</description>
    </item>
    
    <item>
      <title>Android系统init.rc全解析</title>
      <link>https://mazhidong.github.io/post/aosp/2019-01-18_android%E7%B3%BB%E7%BB%9Finit.rc%E5%85%A8%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Fri, 18 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/aosp/2019-01-18_android%E7%B3%BB%E7%BB%9Finit.rc%E5%85%A8%E8%A7%A3%E6%9E%90/</guid>
      <description>这是一篇用心写的博客，也希望大家用心看并帮忙找到文章的改进之处，谢谢； 服务启动机制 system/core/init/init.c文件main</description>
    </item>
    
    <item>
      <title>Android 5.1 OTA包编译错误</title>
      <link>https://mazhidong.github.io/post/aosp/2018-12-07_android-5.1-ota%E5%8C%85%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF/</link>
      <pubDate>Fri, 07 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/aosp/2018-12-07_android-5.1-ota%E5%8C%85%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF/</guid>
      <description>最近在RK3288 Android5.1上使用make otapackage命令编译OTA升级包时，出现如下错误： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</description>
    </item>
    
    <item>
      <title>安卓设备的网络adb调试设置</title>
      <link>https://mazhidong.github.io/post/android/2018-11-16_%E5%AE%89%E5%8D%93%E8%AE%BE%E5%A4%87%E7%9A%84%E7%BD%91%E7%BB%9Cadb%E8%B0%83%E8%AF%95%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Fri, 16 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/android/2018-11-16_%E5%AE%89%E5%8D%93%E8%AE%BE%E5%A4%87%E7%9A%84%E7%BD%91%E7%BB%9Cadb%E8%B0%83%E8%AF%95%E8%AE%BE%E7%BD%AE/</guid>
      <description>1. 安卓的adb调试模式有两种： 使用usb线 使用网络 2. 使用网络adb模式： 安卓设备跟电脑需处于同一局域网内，可以使用有线网的方式 让电脑跟安卓设</description>
    </item>
    
    <item>
      <title>系统同步RTC失败</title>
      <link>https://mazhidong.github.io/post/kernel/2018-11-12_%E7%B3%BB%E7%BB%9F%E5%90%8C%E6%AD%A5rtc%E5%A4%B1%E8%B4%A5/</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/kernel/2018-11-12_%E7%B3%BB%E7%BB%9F%E5%90%8C%E6%AD%A5rtc%E5%A4%B1%E8%B4%A5/</guid>
      <description>问题描述 开机设置正确时间后，重启机器，时间仍为RTC中原始值，也就是说正确的时间并没有设置到RTC中，而RTC一直走着一个错误的时间，并在开</description>
    </item>
    
    <item>
      <title>Android.mk 文件语法详解</title>
      <link>https://mazhidong.github.io/post/jni/2018-10-08-android.mk%E6%96%87%E4%BB%B6%E8%AF%AD%E6%B3%95%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/jni/2018-10-08-android.mk%E6%96%87%E4%BB%B6%E8%AF%AD%E6%B3%95%E8%AF%A6%E8%A7%A3/</guid>
      <description>0. Android.mk简介： Android.mk文件用来告知NDK Build 系统关于Source的信息。 Android.mk将是GNU Makefil</description>
    </item>
    
    <item>
      <title>CMake 入门实战</title>
      <link>https://mazhidong.github.io/post/jni/2018-10-08-cmake%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98/</link>
      <pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/jni/2018-10-08-cmake%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98/</guid>
      <description>什么是 CMake 1 2 All problems in computer science can be solved by another level of indirection. David Wheeler 你或许听过好几种 Make 工具，例如 GNU Make ，QT 的 qmake ，微软的 MS nmake，BSD Make（pmake），Ma</description>
    </item>
    
    <item>
      <title>String[] 转char* argv[]</title>
      <link>https://mazhidong.github.io/post/jni/2018-10-08-string-%E8%BD%ACchar-argv/</link>
      <pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/jni/2018-10-08-string-%E8%BD%ACchar-argv/</guid>
      <description>代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 /* * Class: com_ema_testlib_infrastructure_demo_JNITools * Method: uartTest * Signature: ([Ljava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_ema_testlib_infrastructure_demo_JNITools_uartTest (JNIEnv *env, jobject, jobjectArray jargv) { int argc = env-&amp;gt;GetArrayLength(jargv); typedef char *pchar; pchar *argv =</description>
    </item>
    
    <item>
      <title>VS-RK3399 and VS-RK3288 Audio 开发指南</title>
      <link>https://mazhidong.github.io/post/aosp/2018-09-20-vs-rk3399-and-vs-rk3288-audio-%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/aosp/2018-09-20-vs-rk3399-and-vs-rk3288-audio-%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/</guid>
      <description>1 概论 1.1 概述 本章主要描述Audio的相关的概念、代码结构。 1.2 概念 CPU DAI:主控端的Audio Data Interface，比如I2S,Spdif,P</description>
    </item>
    
    <item>
      <title>onActivityResult执行时机</title>
      <link>https://mazhidong.github.io/post/android/2018-09-12-onactivityresult%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA/</link>
      <pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/android/2018-09-12-onactivityresult%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA/</guid>
      <description>前言 前两天遇到了个onActivityResult执行时机错误的问题，在解决过程中学习了些onActivityResult与setResul</description>
    </item>
    
    <item>
      <title>dialog隐藏虚拟按键</title>
      <link>https://mazhidong.github.io/post/android/2018-09-11-dialog%E9%9A%90%E8%97%8F%E8%99%9A%E6%8B%9F%E6%8C%89%E9%94%AE/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/android/2018-09-11-dialog%E9%9A%90%E8%97%8F%E8%99%9A%E6%8B%9F%E6%8C%89%E9%94%AE/</guid>
      <description>Android 部分机型没有物理按键，只有虚拟按键，Activity全屏方法如下： 在 1 setContentView(R.layout.activity_main); 之前添加 1 getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_HIDE_NAVIGATION); 当用户划出虚拟按键后，自动再隐藏方法如下： 1 2 3 4 5 6</description>
    </item>
    
    <item>
      <title>android 多module打包aar</title>
      <link>https://mazhidong.github.io/post/android/2018-08-24-android_%E5%A4%9Amodule%E6%89%93%E5%8C%85aar/</link>
      <pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/android/2018-08-24-android_%E5%A4%9Amodule%E6%89%93%E5%8C%85aar/</guid>
      <description>一、打包 aar 1、单个模块打包 打开 Gradle 工具窗口,找到 Android Library 模块. 在 build 任务中双击 assemble. 执行成功后，在 mylibrary/build/outputs/aar 目录下找到 aar 包. 默认 Debug 和 Release 的 AAR 包都会打出来,当然你也</description>
    </item>
    
    <item>
      <title>android 单例模式</title>
      <link>https://mazhidong.github.io/post/android/2018-08-17-android%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/android/2018-08-17-android%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>tip 单例模式的实现方式有懒汉，饿汉，双重校验锁，枚举，内部类等等，写法就不全部列举了。Android源码中一个单例辅助类/frameworks</description>
    </item>
    
    <item>
      <title>exchange-extsd-and-sdcard</title>
      <link>https://mazhidong.github.io/post/aosp/2018-08-15-exchange-extsd-and-sdcard/</link>
      <pubDate>Wed, 15 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/aosp/2018-08-15-exchange-extsd-and-sdcard/</guid>
      <description>系统环境 Android 4.4.2 问题描述 交换内外SD卡挂载路径 patch MediaScannerReceiver 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47</description>
    </item>
    
    <item>
      <title>android framework之旅（四）去除Usb权限弹窗</title>
      <link>https://mazhidong.github.io/post/aosp/2018-08-07-android_framework%E4%B9%8B%E6%97%85%E5%9B%9B%E5%8E%BB%E9%99%A4usb%E6%9D%83%E9%99%90%E5%BC%B9%E7%AA%97/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mazhidong.github.io/post/aosp/2018-08-07-android_framework%E4%B9%8B%E6%97%85%E5%9B%9B%E5%8E%BB%E9%99%A4usb%E6%9D%83%E9%99%90%E5%BC%B9%E7%AA%97/</guid>
      <description>终于配置、下载、编译、刷机各种环节均已打通，回归到自己的初始目标，去除每次重启插入usb后的权限弹窗提示。 环境 源码版本：5.1.1 修改 我们打</description>
    </item>
    
  </channel>
</rss>